// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.BackApp.Domain;

#nullable disable

namespace Shop.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240315100849_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d34d128-3ff6-4280-8dd8-a9cfdaccb7f3"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Ноутбуки и компьютеры"
                        },
                        new
                        {
                            Id = new Guid("d7afe1e0-13cf-4b9d-8410-6c6e1439b3e6"),
                            CategoryId = new Guid("3d34d128-3ff6-4280-8dd8-a9cfdaccb7f3"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Ноутбуки"
                        },
                        new
                        {
                            Id = new Guid("79400f16-500a-4c05-a907-5679bfab39bb"),
                            CategoryId = new Guid("3d34d128-3ff6-4280-8dd8-a9cfdaccb7f3"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Компьютеры"
                        },
                        new
                        {
                            Id = new Guid("03d6d0ff-d9f0-436c-88ae-549b8346754e"),
                            CategoryId = new Guid("3d34d128-3ff6-4280-8dd8-a9cfdaccb7f3"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Мониторы"
                        },
                        new
                        {
                            Id = new Guid("3cb2735a-226f-41fe-bd3f-d9ca413cabed"),
                            CategoryId = new Guid("3d34d128-3ff6-4280-8dd8-a9cfdaccb7f3"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Планшеты"
                        },
                        new
                        {
                            Id = new Guid("1da00885-1f7f-4b43-9827-f84bcb9fa8d9"),
                            CategoryId = new Guid("3d34d128-3ff6-4280-8dd8-a9cfdaccb7f3"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Компьютерные комплектующие"
                        },
                        new
                        {
                            Id = new Guid("d1647e30-07f2-49cd-9d99-82e0346e6b99"),
                            CategoryId = new Guid("1da00885-1f7f-4b43-9827-f84bcb9fa8d9"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Материнские платы"
                        },
                        new
                        {
                            Id = new Guid("e71b4595-09e5-4fd1-9ab2-be9c77e03aba"),
                            CategoryId = new Guid("1da00885-1f7f-4b43-9827-f84bcb9fa8d9"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Процессоры"
                        },
                        new
                        {
                            Id = new Guid("7d2bff55-6d40-4c03-8a3a-6d9f5583767a"),
                            CategoryId = new Guid("1da00885-1f7f-4b43-9827-f84bcb9fa8d9"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Оперативная память"
                        },
                        new
                        {
                            Id = new Guid("939095d0-a56b-4140-a05b-3dd448023571"),
                            CategoryId = new Guid("1da00885-1f7f-4b43-9827-f84bcb9fa8d9"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Видеокарты"
                        },
                        new
                        {
                            Id = new Guid("ddbe2feb-f3e1-4c1f-9fd9-fcbe9cc11142"),
                            CategoryId = new Guid("1da00885-1f7f-4b43-9827-f84bcb9fa8d9"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Звуковые карты"
                        },
                        new
                        {
                            Id = new Guid("29dc6c88-419c-4bba-b46e-42aff6f93ffb"),
                            CategoryId = new Guid("1da00885-1f7f-4b43-9827-f84bcb9fa8d9"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Жесткие диски"
                        },
                        new
                        {
                            Id = new Guid("eff8c33a-a0b2-490d-88a9-49fd57f1d422"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Смартфоны, ТВ и Электроника"
                        },
                        new
                        {
                            Id = new Guid("e621fb61-37c1-4e5b-bc3d-78482293019e"),
                            CategoryId = new Guid("eff8c33a-a0b2-490d-88a9-49fd57f1d422"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Мобильные телефоны"
                        },
                        new
                        {
                            Id = new Guid("c81f79a1-3031-4073-9694-76d6e3214f56"),
                            CategoryId = new Guid("eff8c33a-a0b2-490d-88a9-49fd57f1d422"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Телевизоры"
                        },
                        new
                        {
                            Id = new Guid("9ac0d850-4934-4282-b7ec-5f0d35d4f67e"),
                            CategoryId = new Guid("eff8c33a-a0b2-490d-88a9-49fd57f1d422"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Наушники и аксессуары"
                        },
                        new
                        {
                            Id = new Guid("1073b2eb-722e-4c1a-a9fb-008bd2b5de32"),
                            CategoryId = new Guid("eff8c33a-a0b2-490d-88a9-49fd57f1d422"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Носимые гаджеты"
                        },
                        new
                        {
                            Id = new Guid("46108ce7-2458-4a8b-a4ef-ba3ee25b4fe3"),
                            CategoryId = new Guid("1073b2eb-722e-4c1a-a9fb-008bd2b5de32"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Смарт-часы"
                        },
                        new
                        {
                            Id = new Guid("8243acf6-17a0-4bdc-a584-087e574af27b"),
                            CategoryId = new Guid("1073b2eb-722e-4c1a-a9fb-008bd2b5de32"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "3D и VR очки"
                        },
                        new
                        {
                            Id = new Guid("68306fc2-1e69-42a4-a043-6e64b293345c"),
                            CategoryId = new Guid("1073b2eb-722e-4c1a-a9fb-008bd2b5de32"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Фитнес-браслеты"
                        },
                        new
                        {
                            Id = new Guid("7d7aba5c-d601-4ca1-8734-bd9e25dde351"),
                            CategoryId = new Guid("1073b2eb-722e-4c1a-a9fb-008bd2b5de32"),
                            DataCreate = new DateTime(2024, 3, 1, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Name = "Смарт-кольца"
                        });
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("708d62f2-bf21-40c9-9ea2-8631516d21c8"),
                            CategoryId = new Guid("3cb2735a-226f-41fe-bd3f-d9ca413cabed"),
                            DataCreate = new DateTime(2024, 3, 10, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 12, 20, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Description = "Burns for 10 hours",
                            Name = "Lamp",
                            Price = 11.11m,
                            UserId = new Guid("e40a9986-9833-4843-9ad3-c872a1b97209")
                        },
                        new
                        {
                            Id = new Guid("ff34c475-da6c-4e40-b769-c7d010385c42"),
                            CategoryId = new Guid("1073b2eb-722e-4c1a-a9fb-008bd2b5de32"),
                            DataCreate = new DateTime(2024, 3, 13, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 10, 1, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Description = "Rubber under your foot",
                            Name = "Slippers",
                            Price = 11.11m,
                            UserId = new Guid("e40a9986-9833-4843-9ad3-c872a1b97209")
                        },
                        new
                        {
                            Id = new Guid("282a01e3-be1e-4d58-873f-217314cd8928"),
                            CategoryId = new Guid("03d6d0ff-d9f0-436c-88ae-549b8346754e"),
                            DataCreate = new DateTime(2024, 3, 14, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 14, 9, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Description = "Description1",
                            Name = "Name1",
                            Price = 1.99m,
                            UserId = new Guid("e40a9986-9833-4843-9ad3-c872a1b97209")
                        },
                        new
                        {
                            Id = new Guid("e7765126-29f1-4e3f-accd-c05df6e8843e"),
                            CategoryId = new Guid("46108ce7-2458-4a8b-a4ef-ba3ee25b4fe3"),
                            DataCreate = new DateTime(2024, 3, 13, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 13, 8, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Description = "Description2",
                            Name = "Name2",
                            Price = 2.99m,
                            UserId = new Guid("e40a9986-9833-4843-9ad3-c872a1b97209")
                        },
                        new
                        {
                            Id = new Guid("62839887-4ac4-44df-8b02-25ce7f98cc79"),
                            CategoryId = new Guid("68306fc2-1e69-42a4-a043-6e64b293345c"),
                            DataCreate = new DateTime(2024, 3, 12, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 12, 7, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Description = "Description3",
                            Name = "Name3",
                            Price = 3.99m,
                            UserId = new Guid("e40a9986-9833-4843-9ad3-c872a1b97209")
                        },
                        new
                        {
                            Id = new Guid("66063c38-e8d6-4108-857d-f2f014f33a6c"),
                            CategoryId = new Guid("eff8c33a-a0b2-490d-88a9-49fd57f1d422"),
                            DataCreate = new DateTime(2024, 3, 11, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 11, 6, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Description = "Description4",
                            Name = "Name4",
                            Price = 4.99m,
                            UserId = new Guid("e40a9986-9833-4843-9ad3-c872a1b97209")
                        },
                        new
                        {
                            Id = new Guid("61ba9534-41d5-474b-b523-5568ee02f337"),
                            CategoryId = new Guid("d7afe1e0-13cf-4b9d-8410-6c6e1439b3e6"),
                            DataCreate = new DateTime(2024, 3, 10, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 10, 5, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Description = "Description5",
                            Name = "Name5",
                            Price = 5.99m,
                            UserId = new Guid("e40a9986-9833-4843-9ad3-c872a1b97209")
                        },
                        new
                        {
                            Id = new Guid("5715b3f4-cb02-4a00-aa0a-d995c4497c1b"),
                            CategoryId = new Guid("03d6d0ff-d9f0-436c-88ae-549b8346754e"),
                            DataCreate = new DateTime(2024, 3, 9, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 9, 4, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Description = "Description6",
                            Name = "Name6",
                            Price = 6.99m,
                            UserId = new Guid("e40a9986-9833-4843-9ad3-c872a1b97209")
                        },
                        new
                        {
                            Id = new Guid("430ba877-ba8a-42c6-8556-113b2a07d821"),
                            CategoryId = new Guid("7d2bff55-6d40-4c03-8a3a-6d9f5583767a"),
                            DataCreate = new DateTime(2024, 3, 8, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 8, 3, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Description = "Description7",
                            Name = "Name7",
                            Price = 7.99m,
                            UserId = new Guid("e40a9986-9833-4843-9ad3-c872a1b97209")
                        },
                        new
                        {
                            Id = new Guid("9c4c35b8-e151-4138-b1b7-563b9f805705"),
                            CategoryId = new Guid("ddbe2feb-f3e1-4c1f-9fd9-fcbe9cc11142"),
                            DataCreate = new DateTime(2024, 3, 7, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 9, 2, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Description = "Description8",
                            Name = "Name8",
                            Price = 8.99m,
                            UserId = new Guid("e40a9986-9833-4843-9ad3-c872a1b97209")
                        });
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e40a9986-9833-4843-9ad3-c872a1b97209"),
                            DataCreate = new DateTime(2024, 2, 29, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            DataUpdate = new DateTime(2024, 3, 5, 10, 8, 49, 312, DateTimeKind.Utc).AddTicks(7035),
                            Email = "admin@admin.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordHash = "gFaN4aLjaJzqrQgyXth1Quehr8taLoSpc6bJzKAFDhk=",
                            PasswordSalt = "mPSDf1cGYaldhG0fcy+tlQ=="
                        });
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Category", b =>
                {
                    b.HasOne("Shop.BackApp.Domain.Entity.Category", null)
                        .WithMany("Categories")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Category", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
