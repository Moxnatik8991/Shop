// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.BackApp.Domain;

#nullable disable

namespace Shop.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240317111626_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("580e4680-fd28-48b8-b976-22f23c61a9cb"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Ноутбуки и компьютеры"
                        },
                        new
                        {
                            Id = new Guid("5ce876a7-20cb-4b48-bb35-56bd3d77b529"),
                            CategoryId = new Guid("580e4680-fd28-48b8-b976-22f23c61a9cb"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Ноутбуки"
                        },
                        new
                        {
                            Id = new Guid("fe272257-138e-4ef7-9eb5-c870f766cad4"),
                            CategoryId = new Guid("580e4680-fd28-48b8-b976-22f23c61a9cb"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Компьютеры"
                        },
                        new
                        {
                            Id = new Guid("861f5ba9-edb2-4d3b-a943-70e748f201ee"),
                            CategoryId = new Guid("580e4680-fd28-48b8-b976-22f23c61a9cb"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Мониторы"
                        },
                        new
                        {
                            Id = new Guid("41a8bad2-7360-4b1f-9d64-148580a1a510"),
                            CategoryId = new Guid("580e4680-fd28-48b8-b976-22f23c61a9cb"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Планшеты"
                        },
                        new
                        {
                            Id = new Guid("acd402ca-a6d4-4676-a82d-b723671049cc"),
                            CategoryId = new Guid("580e4680-fd28-48b8-b976-22f23c61a9cb"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Компьютерные комплектующие"
                        },
                        new
                        {
                            Id = new Guid("7a5bffd1-5a21-4317-a409-b2c007e3027c"),
                            CategoryId = new Guid("acd402ca-a6d4-4676-a82d-b723671049cc"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Материнские платы"
                        },
                        new
                        {
                            Id = new Guid("777c3b7d-7701-4956-a0ba-6f3774bd9afe"),
                            CategoryId = new Guid("acd402ca-a6d4-4676-a82d-b723671049cc"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Процессоры"
                        },
                        new
                        {
                            Id = new Guid("452c43d2-9c51-4180-873d-c3382bbf8600"),
                            CategoryId = new Guid("acd402ca-a6d4-4676-a82d-b723671049cc"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Оперативная память"
                        },
                        new
                        {
                            Id = new Guid("3b286d62-d045-48a1-890f-1352a2fd28c0"),
                            CategoryId = new Guid("acd402ca-a6d4-4676-a82d-b723671049cc"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Видеокарты"
                        },
                        new
                        {
                            Id = new Guid("941cd916-5318-420b-96ea-cc87bd852501"),
                            CategoryId = new Guid("acd402ca-a6d4-4676-a82d-b723671049cc"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Звуковые карты"
                        },
                        new
                        {
                            Id = new Guid("698f95fb-4ee0-40ec-af69-db879f45f771"),
                            CategoryId = new Guid("acd402ca-a6d4-4676-a82d-b723671049cc"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Жесткие диски"
                        },
                        new
                        {
                            Id = new Guid("f6f334d4-4ee3-4194-9aca-546dbef39f46"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Смартфоны, ТВ и Электроника"
                        },
                        new
                        {
                            Id = new Guid("2ccc3123-e24f-4ac1-ad53-cfc6c7639794"),
                            CategoryId = new Guid("f6f334d4-4ee3-4194-9aca-546dbef39f46"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Мобильные телефоны"
                        },
                        new
                        {
                            Id = new Guid("d190b221-9b1a-4e26-8dd8-98d0d2d01414"),
                            CategoryId = new Guid("f6f334d4-4ee3-4194-9aca-546dbef39f46"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Телевизоры"
                        },
                        new
                        {
                            Id = new Guid("178323ff-3bd7-4951-b563-84798aa01f4b"),
                            CategoryId = new Guid("f6f334d4-4ee3-4194-9aca-546dbef39f46"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Наушники и аксессуары"
                        },
                        new
                        {
                            Id = new Guid("fd4f896d-fd54-4f01-8b5f-1aa90c4c5ebd"),
                            CategoryId = new Guid("f6f334d4-4ee3-4194-9aca-546dbef39f46"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Носимые гаджеты"
                        },
                        new
                        {
                            Id = new Guid("b85e139d-f167-43bc-ba6e-c5e9d9efe384"),
                            CategoryId = new Guid("fd4f896d-fd54-4f01-8b5f-1aa90c4c5ebd"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Смарт-часы"
                        },
                        new
                        {
                            Id = new Guid("2d988ac2-746e-49f0-812c-ef1016dec01c"),
                            CategoryId = new Guid("fd4f896d-fd54-4f01-8b5f-1aa90c4c5ebd"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "3D и VR очки"
                        },
                        new
                        {
                            Id = new Guid("216c988c-c095-4f1e-b3c2-0baf5933c42e"),
                            CategoryId = new Guid("fd4f896d-fd54-4f01-8b5f-1aa90c4c5ebd"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Фитнес-браслеты"
                        },
                        new
                        {
                            Id = new Guid("39107a2b-5d47-48b6-b803-a1c28c9c486a"),
                            CategoryId = new Guid("fd4f896d-fd54-4f01-8b5f-1aa90c4c5ebd"),
                            DataCreate = new DateTime(2024, 3, 3, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Name = "Смарт-кольца"
                        });
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c90e731b-6383-4653-8943-b4a588984bb8"),
                            CategoryId = new Guid("861f5ba9-edb2-4d3b-a943-70e748f201ee"),
                            DataCreate = new DateTime(2024, 3, 12, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 14, 21, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Description = "Burns for 10 hours",
                            Name = "Lamp",
                            Price = 11.11m,
                            UserId = new Guid("76e52165-3a75-4e37-bc50-4b2d87a8fcd3")
                        },
                        new
                        {
                            Id = new Guid("6d99af76-1ae4-4b21-983c-9493ce0bd249"),
                            CategoryId = new Guid("2d988ac2-746e-49f0-812c-ef1016dec01c"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 12, 2, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Description = "Rubber under your foot",
                            Name = "Slippers",
                            Price = 11.11m,
                            UserId = new Guid("76e52165-3a75-4e37-bc50-4b2d87a8fcd3")
                        },
                        new
                        {
                            Id = new Guid("8dbaec10-3332-4054-81dd-ffa73dcf9906"),
                            CategoryId = new Guid("178323ff-3bd7-4951-b563-84798aa01f4b"),
                            DataCreate = new DateTime(2024, 3, 16, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 16, 10, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Description = "Description1",
                            Name = "Name1",
                            Price = 1.99m,
                            UserId = new Guid("76e52165-3a75-4e37-bc50-4b2d87a8fcd3")
                        },
                        new
                        {
                            Id = new Guid("477dd1e4-6136-4369-b57b-fbba47918663"),
                            CategoryId = new Guid("41a8bad2-7360-4b1f-9d64-148580a1a510"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 15, 9, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Description = "Description2",
                            Name = "Name2",
                            Price = 2.99m,
                            UserId = new Guid("76e52165-3a75-4e37-bc50-4b2d87a8fcd3")
                        },
                        new
                        {
                            Id = new Guid("5d2d5b90-5904-4653-b00d-3128343e1a68"),
                            CategoryId = new Guid("861f5ba9-edb2-4d3b-a943-70e748f201ee"),
                            DataCreate = new DateTime(2024, 3, 14, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 14, 8, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Description = "Description3",
                            Name = "Name3",
                            Price = 3.99m,
                            UserId = new Guid("76e52165-3a75-4e37-bc50-4b2d87a8fcd3")
                        },
                        new
                        {
                            Id = new Guid("dff25cd8-cd03-443a-be83-1b783b1e1af5"),
                            CategoryId = new Guid("178323ff-3bd7-4951-b563-84798aa01f4b"),
                            DataCreate = new DateTime(2024, 3, 13, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 13, 7, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Description = "Description4",
                            Name = "Name4",
                            Price = 4.99m,
                            UserId = new Guid("76e52165-3a75-4e37-bc50-4b2d87a8fcd3")
                        },
                        new
                        {
                            Id = new Guid("bb869db5-e0f2-44d6-a09c-befc61a20195"),
                            CategoryId = new Guid("acd402ca-a6d4-4676-a82d-b723671049cc"),
                            DataCreate = new DateTime(2024, 3, 12, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 12, 6, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Description = "Description5",
                            Name = "Name5",
                            Price = 5.99m,
                            UserId = new Guid("76e52165-3a75-4e37-bc50-4b2d87a8fcd3")
                        },
                        new
                        {
                            Id = new Guid("3c643819-34a6-4fc3-b49f-5880357a0a3f"),
                            CategoryId = new Guid("b85e139d-f167-43bc-ba6e-c5e9d9efe384"),
                            DataCreate = new DateTime(2024, 3, 11, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 11, 5, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Description = "Description6",
                            Name = "Name6",
                            Price = 6.99m,
                            UserId = new Guid("76e52165-3a75-4e37-bc50-4b2d87a8fcd3")
                        },
                        new
                        {
                            Id = new Guid("f3790f41-87f5-4565-8bd2-e58598b0dcfd"),
                            CategoryId = new Guid("2ccc3123-e24f-4ac1-ad53-cfc6c7639794"),
                            DataCreate = new DateTime(2024, 3, 10, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 10, 4, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Description = "Description7",
                            Name = "Name7",
                            Price = 7.99m,
                            UserId = new Guid("76e52165-3a75-4e37-bc50-4b2d87a8fcd3")
                        },
                        new
                        {
                            Id = new Guid("99e791c1-f34c-4915-816c-c754a3870056"),
                            CategoryId = new Guid("acd402ca-a6d4-4676-a82d-b723671049cc"),
                            DataCreate = new DateTime(2024, 3, 9, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 11, 3, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Description = "Description8",
                            Name = "Name8",
                            Price = 8.99m,
                            UserId = new Guid("76e52165-3a75-4e37-bc50-4b2d87a8fcd3")
                        });
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76e52165-3a75-4e37-bc50-4b2d87a8fcd3"),
                            DataCreate = new DateTime(2024, 3, 2, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            DataUpdate = new DateTime(2024, 3, 7, 11, 16, 26, 12, DateTimeKind.Utc).AddTicks(8826),
                            Email = "admin@admin.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordHash = "Afo2cQdXp2BHeyIptt2EJFl/hFM0M55n2F3IuHAMncU=",
                            PasswordSalt = "2eEB+yL3s6IONik+IHlU3g=="
                        });
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Category", b =>
                {
                    b.HasOne("Shop.BackApp.Domain.Entity.Category", null)
                        .WithMany("Categories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Category", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
