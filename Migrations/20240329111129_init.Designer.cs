// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.BackApp.Domain;

#nullable disable

namespace Shop.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240329111129_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5866edfd-2157-48fa-bef7-8e3ac1c071cc"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Ноутбуки и компьютеры"
                        },
                        new
                        {
                            Id = new Guid("078d6342-03f8-48d7-83a8-84706f4da297"),
                            CategoryId = new Guid("5866edfd-2157-48fa-bef7-8e3ac1c071cc"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Ноутбуки"
                        },
                        new
                        {
                            Id = new Guid("68ef4b77-ce5f-48ef-82fb-ac32dae06f29"),
                            CategoryId = new Guid("5866edfd-2157-48fa-bef7-8e3ac1c071cc"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Компьютеры"
                        },
                        new
                        {
                            Id = new Guid("416fd219-2593-41dc-a70e-136403122301"),
                            CategoryId = new Guid("5866edfd-2157-48fa-bef7-8e3ac1c071cc"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Мониторы"
                        },
                        new
                        {
                            Id = new Guid("d593759c-9fa3-467c-90a2-d5e60b15631c"),
                            CategoryId = new Guid("5866edfd-2157-48fa-bef7-8e3ac1c071cc"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Планшеты"
                        },
                        new
                        {
                            Id = new Guid("25380da2-95e4-40cf-99fe-025d0a2d9771"),
                            CategoryId = new Guid("5866edfd-2157-48fa-bef7-8e3ac1c071cc"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Компьютерные комплектующие"
                        },
                        new
                        {
                            Id = new Guid("84fb64ff-5829-4dc6-b88e-43498aba1642"),
                            CategoryId = new Guid("25380da2-95e4-40cf-99fe-025d0a2d9771"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Материнские платы"
                        },
                        new
                        {
                            Id = new Guid("2fdafd78-7343-487f-9c40-d395bdcafcb9"),
                            CategoryId = new Guid("25380da2-95e4-40cf-99fe-025d0a2d9771"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Процессоры"
                        },
                        new
                        {
                            Id = new Guid("bfde0964-1dbf-41a6-90e3-bb9462137143"),
                            CategoryId = new Guid("25380da2-95e4-40cf-99fe-025d0a2d9771"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Оперативная память"
                        },
                        new
                        {
                            Id = new Guid("444ddeff-90d1-476f-802c-ac608ea2110e"),
                            CategoryId = new Guid("25380da2-95e4-40cf-99fe-025d0a2d9771"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Видеокарты"
                        },
                        new
                        {
                            Id = new Guid("a3348a9a-4af1-47de-90d0-046036481d46"),
                            CategoryId = new Guid("25380da2-95e4-40cf-99fe-025d0a2d9771"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Звуковые карты"
                        },
                        new
                        {
                            Id = new Guid("abce9944-ef10-4c05-823c-04bb8d0dc683"),
                            CategoryId = new Guid("25380da2-95e4-40cf-99fe-025d0a2d9771"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Жесткие диски"
                        },
                        new
                        {
                            Id = new Guid("2ec6fa8d-e0ed-4d10-bc9f-0cadc042a988"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Смартфоны, ТВ и Электроника"
                        },
                        new
                        {
                            Id = new Guid("17a37ec7-22c1-4b02-a3e8-4124c98d1323"),
                            CategoryId = new Guid("2ec6fa8d-e0ed-4d10-bc9f-0cadc042a988"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Мобильные телефоны"
                        },
                        new
                        {
                            Id = new Guid("b9428003-b047-470d-927a-6eb909cc5c37"),
                            CategoryId = new Guid("2ec6fa8d-e0ed-4d10-bc9f-0cadc042a988"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Телевизоры"
                        },
                        new
                        {
                            Id = new Guid("a7310cb0-cf7b-4110-950e-2a6be384f682"),
                            CategoryId = new Guid("2ec6fa8d-e0ed-4d10-bc9f-0cadc042a988"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Наушники и аксессуары"
                        },
                        new
                        {
                            Id = new Guid("a7c338b8-aefe-4885-a263-0b2ff055cb60"),
                            CategoryId = new Guid("2ec6fa8d-e0ed-4d10-bc9f-0cadc042a988"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Носимые гаджеты"
                        },
                        new
                        {
                            Id = new Guid("cb3b2704-40d8-4676-b50b-4fbd60c0b229"),
                            CategoryId = new Guid("a7c338b8-aefe-4885-a263-0b2ff055cb60"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Смарт-часы"
                        },
                        new
                        {
                            Id = new Guid("87d5e27f-79c9-4e26-9b8f-3825355e826d"),
                            CategoryId = new Guid("a7c338b8-aefe-4885-a263-0b2ff055cb60"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "3D и VR очки"
                        },
                        new
                        {
                            Id = new Guid("b44dd965-0de4-47ec-ac60-b69b2cbda873"),
                            CategoryId = new Guid("a7c338b8-aefe-4885-a263-0b2ff055cb60"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Фитнес-браслеты"
                        },
                        new
                        {
                            Id = new Guid("5a24d018-2c71-40a8-9bef-e9cd9d725cfc"),
                            CategoryId = new Guid("a7c338b8-aefe-4885-a263-0b2ff055cb60"),
                            DataCreate = new DateTime(2024, 3, 15, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Name = "Смарт-кольца"
                        });
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.FileDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileDetails");
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f70fb8fc-30da-4a00-8133-46ff5eb00e70"),
                            CategoryId = new Guid("d593759c-9fa3-467c-90a2-d5e60b15631c"),
                            DataCreate = new DateTime(2024, 3, 24, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 26, 21, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Description = "Burns for 10 hours",
                            Name = "Lamp",
                            Price = 11.11m,
                            UserId = new Guid("e4767940-3a87-46d6-a372-a5c3c89c2d56")
                        },
                        new
                        {
                            Id = new Guid("a5e4e961-fabe-4af7-a7ab-128072f6b035"),
                            CategoryId = new Guid("cb3b2704-40d8-4676-b50b-4fbd60c0b229"),
                            DataCreate = new DateTime(2024, 3, 27, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 24, 2, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Description = "Rubber under your foot",
                            Name = "Slippers",
                            Price = 11.11m,
                            UserId = new Guid("e4767940-3a87-46d6-a372-a5c3c89c2d56")
                        },
                        new
                        {
                            Id = new Guid("aa3789b9-5f10-4a3a-b3a8-e7a3bd5c052f"),
                            CategoryId = new Guid("444ddeff-90d1-476f-802c-ac608ea2110e"),
                            DataCreate = new DateTime(2024, 3, 28, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 28, 10, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Description = "Description1",
                            Name = "Name1",
                            Price = 1.99m,
                            UserId = new Guid("e4767940-3a87-46d6-a372-a5c3c89c2d56")
                        },
                        new
                        {
                            Id = new Guid("b05792ca-e217-4517-847a-66a23809f453"),
                            CategoryId = new Guid("25380da2-95e4-40cf-99fe-025d0a2d9771"),
                            DataCreate = new DateTime(2024, 3, 27, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 27, 9, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Description = "Description2",
                            Name = "Name2",
                            Price = 2.99m,
                            UserId = new Guid("e4767940-3a87-46d6-a372-a5c3c89c2d56")
                        },
                        new
                        {
                            Id = new Guid("76b3e76e-3adc-4c85-8c73-cd6e791c3244"),
                            CategoryId = new Guid("84fb64ff-5829-4dc6-b88e-43498aba1642"),
                            DataCreate = new DateTime(2024, 3, 26, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 26, 8, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Description = "Description3",
                            Name = "Name3",
                            Price = 3.99m,
                            UserId = new Guid("e4767940-3a87-46d6-a372-a5c3c89c2d56")
                        },
                        new
                        {
                            Id = new Guid("e19dab58-c233-4df4-b903-08df13dc9782"),
                            CategoryId = new Guid("d593759c-9fa3-467c-90a2-d5e60b15631c"),
                            DataCreate = new DateTime(2024, 3, 25, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 25, 7, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Description = "Description4",
                            Name = "Name4",
                            Price = 4.99m,
                            UserId = new Guid("e4767940-3a87-46d6-a372-a5c3c89c2d56")
                        },
                        new
                        {
                            Id = new Guid("946c82cd-502d-4814-b409-70837e5d32be"),
                            CategoryId = new Guid("bfde0964-1dbf-41a6-90e3-bb9462137143"),
                            DataCreate = new DateTime(2024, 3, 24, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 24, 6, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Description = "Description5",
                            Name = "Name5",
                            Price = 5.99m,
                            UserId = new Guid("e4767940-3a87-46d6-a372-a5c3c89c2d56")
                        },
                        new
                        {
                            Id = new Guid("34558ab9-da66-4526-bc42-ebcbff45d5f5"),
                            CategoryId = new Guid("2fdafd78-7343-487f-9c40-d395bdcafcb9"),
                            DataCreate = new DateTime(2024, 3, 23, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 23, 5, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Description = "Description6",
                            Name = "Name6",
                            Price = 6.99m,
                            UserId = new Guid("e4767940-3a87-46d6-a372-a5c3c89c2d56")
                        },
                        new
                        {
                            Id = new Guid("f125865f-6a8f-4091-ad7d-be0fd786e6c4"),
                            CategoryId = new Guid("5a24d018-2c71-40a8-9bef-e9cd9d725cfc"),
                            DataCreate = new DateTime(2024, 3, 22, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 22, 4, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Description = "Description7",
                            Name = "Name7",
                            Price = 7.99m,
                            UserId = new Guid("e4767940-3a87-46d6-a372-a5c3c89c2d56")
                        },
                        new
                        {
                            Id = new Guid("7e693838-f30a-4169-8256-495b1ae71dc2"),
                            CategoryId = new Guid("84fb64ff-5829-4dc6-b88e-43498aba1642"),
                            DataCreate = new DateTime(2024, 3, 21, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 23, 3, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Description = "Description8",
                            Name = "Name8",
                            Price = 8.99m,
                            UserId = new Guid("e4767940-3a87-46d6-a372-a5c3c89c2d56")
                        });
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e4767940-3a87-46d6-a372-a5c3c89c2d56"),
                            DataCreate = new DateTime(2024, 3, 14, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            DataUpdate = new DateTime(2024, 3, 19, 11, 11, 29, 319, DateTimeKind.Utc).AddTicks(2020),
                            Email = "admin@admin.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordHash = "I1b+5SiyaNUzgTLCS+zZFos/kHiMCgyT/RSKDRBLKZI=",
                            PasswordSalt = "z6CIYjBQpIS6Z8Y3vcNA6A=="
                        });
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Category", b =>
                {
                    b.HasOne("Shop.BackApp.Domain.Entity.Category", null)
                        .WithMany("Categories")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Comment", b =>
                {
                    b.HasOne("Shop.BackApp.Domain.Entity.Product", null)
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Category", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Shop.BackApp.Domain.Entity.Product", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
